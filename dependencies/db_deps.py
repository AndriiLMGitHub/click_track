from sqlalchemy.ext.asyncio import AsyncSession, create_async_engine
from sqlalchemy.orm import sessionmaker
from models.clicks import Base  # üîπ –Ü–º–ø–æ—Ä—Ç—É—î–º–æ Base –∑ models.py
import os

# URL –±–∞–∑–∏ –¥–∞–Ω–∏—Ö (SQLite –∑ aiosqlite)
DATABASE_URL = os.getenv("DATABASE_URL", "sqlite+aiosqlite:///./clicks.db")

# –°—Ç–≤–æ—Ä—é—î–º–æ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏–π engine
engine = create_async_engine(DATABASE_URL)  # <- echo=True, future=True

# –°–µ—Å—ñ—è –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –ë–î
async_session = sessionmaker(
    bind=engine,
    expire_on_commit=False,
    class_=AsyncSession,
)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Ç–∞–±–ª–∏—Ü—å


async def init_db():
    async with engine.begin() as conn:
        print("üîπ Creating tables...")
        await conn.run_sync(Base.metadata.create_all)
        print("‚úÖ Tables ready.")

# Dependency –¥–ª—è FastAPI


async def get_db():
    async with async_session() as session:
        yield session
