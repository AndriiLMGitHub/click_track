"""
FastAPI Backend –¥–ª—è —Ç—Ä–µ–∫—ñ–Ω–≥—É –∫–ª—ñ–∫—ñ–≤
–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è: –û—Å–Ω–æ–≤–Ω–∏–π —Ñ–∞–π–ª —Å–µ—Ä–≤–µ—Ä—É –∑ API endpoints
"""

import os
from contextlib import asynccontextmanager
from fastapi import FastAPI
from fastapi.responses import FileResponse
from fastapi.staticfiles import StaticFiles
from fastapi.middleware.cors import CORSMiddleware
from dotenv import load_dotenv
from routes.click_routes import router as click_router

from dependencies.db_deps import init_db

load_dotenv()  # –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö –æ—Ç–æ—á–µ–Ω–Ω—è –∑ .env —Ñ–∞–π–ª—É

BASE_URL = os.getenv("BASE_URL")
DATABASE_URL = os.getenv("DATABASE_URL")

# ==================== LIFESPAN (—Å—Ç–∞—Ä—Ç/–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è) ====================


@asynccontextmanager
async def lifespan(app: FastAPI):
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä –∂–∏—Ç—Ç—î–≤–æ–≥–æ —Ü–∏–∫–ª—É –¥–æ–¥–∞—Ç–∫—É"""
    print("üöÄ App starting...")
    await init_db()
    print("‚úÖ Database initialized")
    yield
    print("üõë App shutting down...")


# ==================== FASTAPI –î–û–î–ê–¢–û–ö ====================

app = FastAPI(
    lifespan=lifespan,
    title="Click Tracker API",
    description="API –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è IP-–∞–¥—Ä–µ—Å —Ç–∞ –∫–ª—ñ–∫—ñ–≤",
    version="1.0.0",
)

# CORS –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è (–¥–æ–∑–≤–æ–ª—è—î –∑–∞–ø–∏—Ç–∏ –∑ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É)
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # –£ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—ñ –≤–∫–∞–∂—ñ—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏–π –¥–æ–º–µ–Ω
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)
# ==================== –Ü–ú–ü–û–†–¢ –†–û–£–¢–ï–†–Ü–í ====================

app.include_router(click_router)

# –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ React build
client_path = os.path.abspath(os.path.join(
    os.path.dirname(__file__), "client/dist"))

# –°—Ç–∞—Ç–∏—á–Ω—ñ —Ñ–∞–π–ª–∏ (JS, CSS)
app.mount("/static", StaticFiles(directory=client_path), name="static")


@app.get("/", include_in_schema=False)
async def root():
    return FileResponse(os.path.join(client_path, "index.html"))

if __name__ == "__main__":
    import uvicorn
    uvicorn.run("main:app", host="0.0.0.0",
                port=os.getenv("PORT"), reload=True)
